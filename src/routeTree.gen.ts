/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authTermsImport } from './routes/(auth)/terms'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authPrivacyImport } from './routes/(auth)/privacy'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedRolesRouteImport } from './routes/_authenticated/roles/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedInventoryIndexImport } from './routes/_authenticated/inventory/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedProductionRecetasIndexImport } from './routes/_authenticated/production/recetas/index'
import { Route as AuthenticatedProductionPlanificacionIndexImport } from './routes/_authenticated/production/planificacion/index'
import { Route as AuthenticatedProductionLotesFabricacionIndexImport } from './routes/_authenticated/production/lotes-fabricacion/index'
import { Route as AuthenticatedInventoryProductosTerminadosIndexImport } from './routes/_authenticated/inventory/productos-terminados/index'
import { Route as AuthenticatedInventoryMovimientosIndexImport } from './routes/_authenticated/inventory/movimientos/index'
import { Route as AuthenticatedInventoryMateriasPrimasIndexImport } from './routes/_authenticated/inventory/materias-primas/index'
import { Route as AuthenticatedInventoryLotesProductoIndexImport } from './routes/_authenticated/inventory/lotes-producto/index'
import { Route as AuthenticatedInventoryLotesMateriaPrimaIndexImport } from './routes/_authenticated/inventory/lotes-materia-prima/index'
import { Route as AuthenticatedCommercialVentasIndexImport } from './routes/_authenticated/commercial/ventas/index'
import { Route as AuthenticatedCommercialPedidosIndexImport } from './routes/_authenticated/commercial/pedidos/index'
import { Route as AuthenticatedCommercialClientesIndexImport } from './routes/_authenticated/commercial/clientes/index'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authTermsRoute = authTermsImport.update({
  id: '/(auth)/terms',
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authPrivacyRoute = authPrivacyImport.update({
  id: '/(auth)/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedRolesRouteRoute = AuthenticatedRolesRouteImport.update({
  id: '/roles',
  path: '/roles',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedInventoryIndexRoute =
  AuthenticatedInventoryIndexImport.update({
    id: '/inventory/',
    path: '/inventory/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedProductionRecetasIndexRoute =
  AuthenticatedProductionRecetasIndexImport.update({
    id: '/production/recetas/',
    path: '/production/recetas/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductionPlanificacionIndexRoute =
  AuthenticatedProductionPlanificacionIndexImport.update({
    id: '/production/planificacion/',
    path: '/production/planificacion/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductionLotesFabricacionIndexRoute =
  AuthenticatedProductionLotesFabricacionIndexImport.update({
    id: '/production/lotes-fabricacion/',
    path: '/production/lotes-fabricacion/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryProductosTerminadosIndexRoute =
  AuthenticatedInventoryProductosTerminadosIndexImport.update({
    id: '/inventory/productos-terminados/',
    path: '/inventory/productos-terminados/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryMovimientosIndexRoute =
  AuthenticatedInventoryMovimientosIndexImport.update({
    id: '/inventory/movimientos/',
    path: '/inventory/movimientos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryMateriasPrimasIndexRoute =
  AuthenticatedInventoryMateriasPrimasIndexImport.update({
    id: '/inventory/materias-primas/',
    path: '/inventory/materias-primas/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryLotesProductoIndexRoute =
  AuthenticatedInventoryLotesProductoIndexImport.update({
    id: '/inventory/lotes-producto/',
    path: '/inventory/lotes-producto/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInventoryLotesMateriaPrimaIndexRoute =
  AuthenticatedInventoryLotesMateriaPrimaIndexImport.update({
    id: '/inventory/lotes-materia-prima/',
    path: '/inventory/lotes-materia-prima/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCommercialVentasIndexRoute =
  AuthenticatedCommercialVentasIndexImport.update({
    id: '/commercial/ventas/',
    path: '/commercial/ventas/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCommercialPedidosIndexRoute =
  AuthenticatedCommercialPedidosIndexImport.update({
    id: '/commercial/pedidos/',
    path: '/commercial/pedidos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCommercialClientesIndexRoute =
  AuthenticatedCommercialClientesIndexImport.update({
    id: '/commercial/clientes/',
    path: '/commercial/clientes/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/roles': {
      id: '/_authenticated/roles'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof AuthenticatedRolesRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/privacy': {
      id: '/(auth)/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof authPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/terms': {
      id: '/(auth)/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof authTermsImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/': {
      id: '/_authenticated/inventory/'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof AuthenticatedInventoryIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/commercial/clientes/': {
      id: '/_authenticated/commercial/clientes/'
      path: '/commercial/clientes'
      fullPath: '/commercial/clientes'
      preLoaderRoute: typeof AuthenticatedCommercialClientesIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/commercial/pedidos/': {
      id: '/_authenticated/commercial/pedidos/'
      path: '/commercial/pedidos'
      fullPath: '/commercial/pedidos'
      preLoaderRoute: typeof AuthenticatedCommercialPedidosIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/commercial/ventas/': {
      id: '/_authenticated/commercial/ventas/'
      path: '/commercial/ventas'
      fullPath: '/commercial/ventas'
      preLoaderRoute: typeof AuthenticatedCommercialVentasIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/lotes-materia-prima/': {
      id: '/_authenticated/inventory/lotes-materia-prima/'
      path: '/inventory/lotes-materia-prima'
      fullPath: '/inventory/lotes-materia-prima'
      preLoaderRoute: typeof AuthenticatedInventoryLotesMateriaPrimaIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/lotes-producto/': {
      id: '/_authenticated/inventory/lotes-producto/'
      path: '/inventory/lotes-producto'
      fullPath: '/inventory/lotes-producto'
      preLoaderRoute: typeof AuthenticatedInventoryLotesProductoIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/materias-primas/': {
      id: '/_authenticated/inventory/materias-primas/'
      path: '/inventory/materias-primas'
      fullPath: '/inventory/materias-primas'
      preLoaderRoute: typeof AuthenticatedInventoryMateriasPrimasIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/movimientos/': {
      id: '/_authenticated/inventory/movimientos/'
      path: '/inventory/movimientos'
      fullPath: '/inventory/movimientos'
      preLoaderRoute: typeof AuthenticatedInventoryMovimientosIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory/productos-terminados/': {
      id: '/_authenticated/inventory/productos-terminados/'
      path: '/inventory/productos-terminados'
      fullPath: '/inventory/productos-terminados'
      preLoaderRoute: typeof AuthenticatedInventoryProductosTerminadosIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/production/lotes-fabricacion/': {
      id: '/_authenticated/production/lotes-fabricacion/'
      path: '/production/lotes-fabricacion'
      fullPath: '/production/lotes-fabricacion'
      preLoaderRoute: typeof AuthenticatedProductionLotesFabricacionIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/production/planificacion/': {
      id: '/_authenticated/production/planificacion/'
      path: '/production/planificacion'
      fullPath: '/production/planificacion'
      preLoaderRoute: typeof AuthenticatedProductionPlanificacionIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/production/recetas/': {
      id: '/_authenticated/production/recetas/'
      path: '/production/recetas'
      fullPath: '/production/recetas'
      preLoaderRoute: typeof AuthenticatedProductionRecetasIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedRolesRouteRoute: typeof AuthenticatedRolesRouteRoute
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedInventoryIndexRoute: typeof AuthenticatedInventoryIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedCommercialClientesIndexRoute: typeof AuthenticatedCommercialClientesIndexRoute
  AuthenticatedCommercialPedidosIndexRoute: typeof AuthenticatedCommercialPedidosIndexRoute
  AuthenticatedCommercialVentasIndexRoute: typeof AuthenticatedCommercialVentasIndexRoute
  AuthenticatedInventoryLotesMateriaPrimaIndexRoute: typeof AuthenticatedInventoryLotesMateriaPrimaIndexRoute
  AuthenticatedInventoryLotesProductoIndexRoute: typeof AuthenticatedInventoryLotesProductoIndexRoute
  AuthenticatedInventoryMateriasPrimasIndexRoute: typeof AuthenticatedInventoryMateriasPrimasIndexRoute
  AuthenticatedInventoryMovimientosIndexRoute: typeof AuthenticatedInventoryMovimientosIndexRoute
  AuthenticatedInventoryProductosTerminadosIndexRoute: typeof AuthenticatedInventoryProductosTerminadosIndexRoute
  AuthenticatedProductionLotesFabricacionIndexRoute: typeof AuthenticatedProductionLotesFabricacionIndexRoute
  AuthenticatedProductionPlanificacionIndexRoute: typeof AuthenticatedProductionPlanificacionIndexRoute
  AuthenticatedProductionRecetasIndexRoute: typeof AuthenticatedProductionRecetasIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedRolesRouteRoute: AuthenticatedRolesRouteRoute,
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedInventoryIndexRoute: AuthenticatedInventoryIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedCommercialClientesIndexRoute:
    AuthenticatedCommercialClientesIndexRoute,
  AuthenticatedCommercialPedidosIndexRoute:
    AuthenticatedCommercialPedidosIndexRoute,
  AuthenticatedCommercialVentasIndexRoute:
    AuthenticatedCommercialVentasIndexRoute,
  AuthenticatedInventoryLotesMateriaPrimaIndexRoute:
    AuthenticatedInventoryLotesMateriaPrimaIndexRoute,
  AuthenticatedInventoryLotesProductoIndexRoute:
    AuthenticatedInventoryLotesProductoIndexRoute,
  AuthenticatedInventoryMateriasPrimasIndexRoute:
    AuthenticatedInventoryMateriasPrimasIndexRoute,
  AuthenticatedInventoryMovimientosIndexRoute:
    AuthenticatedInventoryMovimientosIndexRoute,
  AuthenticatedInventoryProductosTerminadosIndexRoute:
    AuthenticatedInventoryProductosTerminadosIndexRoute,
  AuthenticatedProductionLotesFabricacionIndexRoute:
    AuthenticatedProductionLotesFabricacionIndexRoute,
  AuthenticatedProductionPlanificacionIndexRoute:
    AuthenticatedProductionPlanificacionIndexRoute,
  AuthenticatedProductionRecetasIndexRoute:
    AuthenticatedProductionRecetasIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/roles': typeof AuthenticatedRolesRouteRoute
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/privacy': typeof authPrivacyRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/terms': typeof authTermsRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/inventory': typeof AuthenticatedInventoryIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/commercial/clientes': typeof AuthenticatedCommercialClientesIndexRoute
  '/commercial/pedidos': typeof AuthenticatedCommercialPedidosIndexRoute
  '/commercial/ventas': typeof AuthenticatedCommercialVentasIndexRoute
  '/inventory/lotes-materia-prima': typeof AuthenticatedInventoryLotesMateriaPrimaIndexRoute
  '/inventory/lotes-producto': typeof AuthenticatedInventoryLotesProductoIndexRoute
  '/inventory/materias-primas': typeof AuthenticatedInventoryMateriasPrimasIndexRoute
  '/inventory/movimientos': typeof AuthenticatedInventoryMovimientosIndexRoute
  '/inventory/productos-terminados': typeof AuthenticatedInventoryProductosTerminadosIndexRoute
  '/production/lotes-fabricacion': typeof AuthenticatedProductionLotesFabricacionIndexRoute
  '/production/planificacion': typeof AuthenticatedProductionPlanificacionIndexRoute
  '/production/recetas': typeof AuthenticatedProductionRecetasIndexRoute
}

export interface FileRoutesByTo {
  '/roles': typeof AuthenticatedRolesRouteRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/privacy': typeof authPrivacyRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/terms': typeof authTermsRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/inventory': typeof AuthenticatedInventoryIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/commercial/clientes': typeof AuthenticatedCommercialClientesIndexRoute
  '/commercial/pedidos': typeof AuthenticatedCommercialPedidosIndexRoute
  '/commercial/ventas': typeof AuthenticatedCommercialVentasIndexRoute
  '/inventory/lotes-materia-prima': typeof AuthenticatedInventoryLotesMateriaPrimaIndexRoute
  '/inventory/lotes-producto': typeof AuthenticatedInventoryLotesProductoIndexRoute
  '/inventory/materias-primas': typeof AuthenticatedInventoryMateriasPrimasIndexRoute
  '/inventory/movimientos': typeof AuthenticatedInventoryMovimientosIndexRoute
  '/inventory/productos-terminados': typeof AuthenticatedInventoryProductosTerminadosIndexRoute
  '/production/lotes-fabricacion': typeof AuthenticatedProductionLotesFabricacionIndexRoute
  '/production/planificacion': typeof AuthenticatedProductionPlanificacionIndexRoute
  '/production/recetas': typeof AuthenticatedProductionRecetasIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/roles': typeof AuthenticatedRolesRouteRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/privacy': typeof authPrivacyRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(auth)/terms': typeof authTermsRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/inventory/': typeof AuthenticatedInventoryIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/commercial/clientes/': typeof AuthenticatedCommercialClientesIndexRoute
  '/_authenticated/commercial/pedidos/': typeof AuthenticatedCommercialPedidosIndexRoute
  '/_authenticated/commercial/ventas/': typeof AuthenticatedCommercialVentasIndexRoute
  '/_authenticated/inventory/lotes-materia-prima/': typeof AuthenticatedInventoryLotesMateriaPrimaIndexRoute
  '/_authenticated/inventory/lotes-producto/': typeof AuthenticatedInventoryLotesProductoIndexRoute
  '/_authenticated/inventory/materias-primas/': typeof AuthenticatedInventoryMateriasPrimasIndexRoute
  '/_authenticated/inventory/movimientos/': typeof AuthenticatedInventoryMovimientosIndexRoute
  '/_authenticated/inventory/productos-terminados/': typeof AuthenticatedInventoryProductosTerminadosIndexRoute
  '/_authenticated/production/lotes-fabricacion/': typeof AuthenticatedProductionLotesFabricacionIndexRoute
  '/_authenticated/production/planificacion/': typeof AuthenticatedProductionPlanificacionIndexRoute
  '/_authenticated/production/recetas/': typeof AuthenticatedProductionRecetasIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/roles'
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/privacy'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/help-center'
    | '/inventory'
    | '/settings/'
    | '/users'
    | '/commercial/clientes'
    | '/commercial/pedidos'
    | '/commercial/ventas'
    | '/inventory/lotes-materia-prima'
    | '/inventory/lotes-producto'
    | '/inventory/materias-primas'
    | '/inventory/movimientos'
    | '/inventory/productos-terminados'
    | '/production/lotes-fabricacion'
    | '/production/planificacion'
    | '/production/recetas'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/roles'
    | '/forgot-password'
    | '/otp'
    | '/privacy'
    | '/sign-in'
    | '/sign-up'
    | '/terms'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/help-center'
    | '/inventory'
    | '/settings'
    | '/users'
    | '/commercial/clientes'
    | '/commercial/pedidos'
    | '/commercial/ventas'
    | '/inventory/lotes-materia-prima'
    | '/inventory/lotes-producto'
    | '/inventory/materias-primas'
    | '/inventory/movimientos'
    | '/inventory/productos-terminados'
    | '/production/lotes-fabricacion'
    | '/production/planificacion'
    | '/production/recetas'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/roles'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/privacy'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(auth)/terms'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/help-center/'
    | '/_authenticated/inventory/'
    | '/_authenticated/settings/'
    | '/_authenticated/users/'
    | '/_authenticated/commercial/clientes/'
    | '/_authenticated/commercial/pedidos/'
    | '/_authenticated/commercial/ventas/'
    | '/_authenticated/inventory/lotes-materia-prima/'
    | '/_authenticated/inventory/lotes-producto/'
    | '/_authenticated/inventory/materias-primas/'
    | '/_authenticated/inventory/movimientos/'
    | '/_authenticated/inventory/productos-terminados/'
    | '/_authenticated/production/lotes-fabricacion/'
    | '/_authenticated/production/planificacion/'
    | '/_authenticated/production/recetas/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authPrivacyRoute: typeof authPrivacyRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  authTermsRoute: typeof authTermsRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authPrivacyRoute: authPrivacyRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  authTermsRoute: authTermsRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/privacy",
        "/(auth)/sign-in",
        "/(auth)/sign-up",
        "/(auth)/terms",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/roles",
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/help-center/",
        "/_authenticated/inventory/",
        "/_authenticated/users/",
        "/_authenticated/commercial/clientes/",
        "/_authenticated/commercial/pedidos/",
        "/_authenticated/commercial/ventas/",
        "/_authenticated/inventory/lotes-materia-prima/",
        "/_authenticated/inventory/lotes-producto/",
        "/_authenticated/inventory/materias-primas/",
        "/_authenticated/inventory/movimientos/",
        "/_authenticated/inventory/productos-terminados/",
        "/_authenticated/production/lotes-fabricacion/",
        "/_authenticated/production/planificacion/",
        "/_authenticated/production/recetas/"
      ]
    },
    "/_authenticated/roles": {
      "filePath": "_authenticated/roles/route.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/privacy": {
      "filePath": "(auth)/privacy.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(auth)/terms": {
      "filePath": "(auth)/terms.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/": {
      "filePath": "_authenticated/inventory/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/commercial/clientes/": {
      "filePath": "_authenticated/commercial/clientes/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/commercial/pedidos/": {
      "filePath": "_authenticated/commercial/pedidos/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/commercial/ventas/": {
      "filePath": "_authenticated/commercial/ventas/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/lotes-materia-prima/": {
      "filePath": "_authenticated/inventory/lotes-materia-prima/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/lotes-producto/": {
      "filePath": "_authenticated/inventory/lotes-producto/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/materias-primas/": {
      "filePath": "_authenticated/inventory/materias-primas/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/movimientos/": {
      "filePath": "_authenticated/inventory/movimientos/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory/productos-terminados/": {
      "filePath": "_authenticated/inventory/productos-terminados/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/production/lotes-fabricacion/": {
      "filePath": "_authenticated/production/lotes-fabricacion/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/production/planificacion/": {
      "filePath": "_authenticated/production/planificacion/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/production/recetas/": {
      "filePath": "_authenticated/production/recetas/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
